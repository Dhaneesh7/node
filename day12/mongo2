const MongoClient = require('mongodb').MongoClient;
const ObjectId = require('mongodb').ObjectId;
const url = "mongodb://localhost:27017/";
const dbName = "student";





app.get('/students/paginated', function (req, res) => {
  const page = parseInt(req.query.page) || 1;
  const limit = parseInt(req.query.limit) || 5;
  const skip = (page - 1) * limit;

  
    const students = dbo.Student.find({}, { name: 1, age: 1, _id: 0 })
      .skip(skip)
      .limit(limit);
    
    const total = dbo.Student.countDocuments();

    res.json({
      currentPage: page,
      totalPages: Math.ceil(total / limit),
      totalStudents: total,
      students
    });
});

app.delete('/students/drop', async (req, res) => {
  
    dboStudent.collection.drop();
    res.json({ message: 'Student collection dropped' });
  
   /* res.status(500).json({ error: 'Collection drop failed or already dropped' });
  */
});


app.post('teacher/insertteachers', function(req,res)=>{
Teachers=req.body;
 dbo.collection("teacher").insertMany(Teachers, function (err, res) {
        if (err) throw err;

res.json({ success: true, message: ` Teachers inserted` });
 console.log(`Teachers inserted`);
        client.close();
      });
}

app.get('teacher/avgsalary', function(req,res)=>{
Teachers=req.body;
 dbo.collection("teacher").insertMany(Teachers, function (err, res) {
        if (err) throw err;

res.json({ success: true, message: ` Teachers inserted` });
 console.log(`Teachers inserted`);
        client.close();
      });
}
app.get('teacher/oldest', function(req,res)=>{
const teacher = dbo.teacher.find().sort({ age:-1 }).limit(1);
    res.json(teacher[0]);
}
app.get('teacher/youngest', function(req,res)=>{
const teacher =dbo.teacher.find().sort({ age: 1 }).limit(1);
    res.json(teacher[0]);
}

app.get('teacher/highsalary', function(req,res)=>{
const teacher = dbo.teacher.find().sort({ salary: 1 }).limit(1);
    res.json(teacher[0]);
}
function validation (){

}